version: "3.9"

services:
  db:
    image: postgres
    container_name: ${IMAGE_NAME}_db
    restart: always
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    healthcheck:
        test: [ "CMD", "pg_isready", "-q", "-d", "${POSTGRES_DB}", "-U", "${POSTGRES_USER}" ]
        timeout: 20s
        interval: 10s
        retries: 10
    ports:
      - "5432:5432"
    volumes:
      - ./data/postgresql/data:/var/lib/postgresql/data
  web:
    image: ec_dict:latest
    build: .
    container_name: ${IMAGE_NAME}_web
    restart: always
    user: "${UID}"
    volumes:
      - .:/opt/app
    depends_on:
      db:
        condition: service_healthy
    links:
      - db

  nginx:
      image: nginx
      container_name: ${IMAGE_NAME}_nginx
      restart: always
      volumes:
          - .:/opt/app
          - ./nginx/conf.d:/etc/nginx/conf.d
          - ./nginx/certificates:/etc/nginx/certificates
      ports:
          - "8000:80"
          - "8443:443"
      depends_on:
          - web
  redis:
    image: redis:latest
    container_name: ${IMAGE_NAME}_redis
    restart: always
  qcluster: 
    image: ec_dict:latest
    container_name: ${IMAGE_NAME}_qcluster
    restart: always
    entrypoint: /opt/app/django_q/docker-entrypoint.sh
    volumes:
      - .:/opt/app
    depends_on:
      - db
      - redis